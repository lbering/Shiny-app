tmp1.log <- predict(mod.codJ, newdata = newdat, type = "link", se.fit = TRUE)
tmp2.log <- predict(mod.flounderJ, newdata = newdat, type = "link", se.fit = TRUE)
tmp3.log <- predict(mod.plaiceJ, newdata = newdat, type = "link", se.fit = TRUE)
tmp4.log <- predict(mod.herringJ, newdata = newdat, type = "link", se.fit = TRUE)
tmp5.log <- predict(mod.spratJ, newdata = newdat, type = "link", se.fit = TRUE)
tmp6.log <- predict(mod.whitingJ, newdata = newdat, type = "link", se.fit = TRUE)
## for error propagations
newdat$cpue_pred.log <- NA
newdat$cpue_pred.log[newdat$loc == "østersøen_codJ"] <- tmp1.log$fit[newdat$loc == "østersøen_codJ"]
newdat$cpue_pred.log[newdat$loc == "østersøen_flounderJ"] <- tmp2.log$fit[newdat$loc == "østersøen_flounderJ"]
newdat$cpue_pred.log[newdat$loc == "østersøen_plaiceJ"] <- tmp3.log$fit[newdat$loc == "østersøen_plaiceJ"]
newdat$cpue_pred.log[newdat$loc == "østersøen_herringJ"] <- tmp4.log$fit[newdat$loc == "østersøen_herringJ"]
newdat$cpue_pred.log[newdat$loc == "østersøen_spratJ"] <- tmp5.log$fit[newdat$loc == "østersøen_spratJ"]
newdat$cpue_pred.log[newdat$loc == "østersøen_whitingJ"] <- tmp6.log$fit[newdat$loc == "østersøen_whitingJ"]
newdat$cpue_sd.log <- NA
newdat$cpue_sd.log[newdat$loc == "østersøen_codJ"] <- tmp1.log$se.fit[newdat$loc == "østersøen_codJ"]
newdat$cpue_sd.log[newdat$loc == "østersøen_flounderJ"] <- tmp2.log$se.fit[newdat$loc == "østersøen_flounderJ"]
newdat$cpue_sd.log[newdat$loc == "østersøen_plaiceJ"] <- tmp3.log$se.fit[newdat$loc == "østersøen_plaiceJ"]
newdat$cpue_sd.log[newdat$loc == "østersøen_herringJ"] <- tmp4.log$se.fit[newdat$loc == "østersøen_herringJ"]
newdat$cpue_sd.log[newdat$loc == "østersøen_spratJ"] <- tmp5.log$se.fit[newdat$loc == "østersøen_spratJ"]
newdat$cpue_sd.log[newdat$loc == "østersøen_whitingJ"] <- tmp6.log$se.fit[newdat$loc == "østersøen_whitingJ"]
write_rds (newdat, "newdat/newdat_østersøenJ.rds")
###########################################
############------østersøen------############
###########################################
library(mgcv)
library(gratia)
library(readr)
library(tidyverse)
library(dplyr)
library(gdata)
library(lubridate)
library(rstudioapi)
# Getting the path of your current open file
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
#--------------------------------------------#
source("funcs.R")
periods <- seq(2000,2024,6)
#------------Make as factors----------------_#
dat_cod <- read_csv("../data_cleaning/dat_cod.csv")
dat_cod <- check.data(dat_cod, periods = periods)
dat_flounder <- read_csv("../data_cleaning/dat_flounder.csv")
dat_flounder <- check.data(dat_flounder, periods = periods)
dat_plaice <- read_csv("../data_cleaning/dat_plaice.csv")
dat_plaice <- check.data(dat_plaice, periods = periods)
dat_herring<- read_csv("../data_cleaning/dat_herring.csv")
dat_herring <- check.data(dat_herring, periods = periods)
dat_sprat<- read_csv("../data_cleaning/dat_sprat.csv")
dat_sprat <- check.data(dat_sprat, periods = periods)
dat_whiting<- read_csv("../data_cleaning/dat_whiting.csv")
dat_whiting <- check.data(dat_whiting, periods = periods)
#--------COD -------#
mod.codM <- gam(cpue ~ #response
period+
s(depth,k=15) +
s(Gear,bs="re")+
Quarter+
SedimentDK,
data = subset(dat_cod, loc == "østersøen_codM"),
family=tw)
mod.codM <- get.mini.model(mod.codM, check.terms = c("period","depth",
"Quarter","SedimentDK"))
#--------FLOUNDER -------#
mod.flounderM<- gam(cpue ~
period+
s(depth,k=15) +
s(Gear,bs="re")+
Quarter+
SedimentDK,
data = subset(dat_flounder, loc == "østersøen_flounderM"),
family=tw)
mod.flounderM <- get.mini.model(mod.flounderM, check.terms = c("period","depth",
"Quarter","SedimentDK"))
#--------PLAICE -------#
mod.plaiceM <- gam(cpue ~
period+
s(depth,k=5) +
s(Gear,bs="re")+
Quarter+
SedimentDK,
data = subset(dat_plaice, loc == "østersøen_plaiceM"),
family=tw)
mod.plaiceM <- get.mini.model(mod.plaiceM, check.terms = c("period","depth",
"Quarter","SedimentDK"))
#--------HERRING -------#
mod.herringM <- gam(cpue ~
period+
s(depth,k=5) +
s(Gear,bs="re")+
Quarter+
SedimentDK,
data = subset(dat_herring, loc == "østersøen_herringM"),
family=tw)
mod.herringM <- get.mini.model(mod.herringM, check.terms = c("period","depth",
"Quarter","SedimentDK"))
#--------SPRAT -------#
mod.spratM <- gam(cpue ~
period+
s(depth,k=5) +
s(Gear,bs="re")+
Quarter+
SedimentDK,
data = subset(dat_sprat, loc == "østersøen_spratM"),
family=tw)
mod.spratM <- get.mini.model(mod.spratM, check.terms = c("period","depth",
"Quarter","SedimentDK"))
#--------WHITING -------#
mod.whitingM <- gam(cpue ~
period+
s(depth,k=5) +
s(Gear,bs="re")+
Quarter+
SedimentDK,
data = subset(dat_whiting, loc == "østersøen_whitingM"),
family=tw)
mod.whitingM <- get.mini.model(mod.whitingM, check.terms = c("period","depth",
"Quarter","SedimentDK"))
newdat <- expand.grid(period = levels(dat_cod$period),
loc = c("østersøen_codM","østersøen_flounderM",
"østersøen_plaiceM","østersøen_herringM",
"østersøen_spratM","østersøen_whitingM"),
depth = 19, #østersøen is 19
Gear=c("TVS"),
Quarter=c("4"),
SedimentDK=c("5")
)
#to check the depth of each location:
#newdat$depth <- depth.by.loc[match(newdat$loc,names(depth.by.loc))] #overwrite for each location
## individual models
tmp1 <- predict(mod.codM, newdata = newdat, type = "response", se.fit = TRUE)
tmp2 <- predict(mod.flounderM, newdata = newdat, type = "response", se.fit = TRUE)
tmp3 <- predict(mod.plaiceM, newdata = newdat, type = "response", se.fit = TRUE)
tmp4 <- predict(mod.herringM, newdata = newdat, type = "response", se.fit = TRUE)
tmp5 <- predict(mod.spratM, newdata = newdat, type = "response", se.fit = TRUE)
tmp6 <- predict(mod.whitingM, newdata = newdat, type = "response", se.fit = TRUE)
#make new data predictions
newdat$cpue_pred <- NA
newdat$cpue_pred[newdat$loc == "østersøen_codM"] <- tmp1$fit[newdat$loc == "østersøen_codM"]
newdat$cpue_pred[newdat$loc == "østersøen_flounderM"] <- tmp2$fit[newdat$loc == "østersøen_flounderM"]
newdat$cpue_pred[newdat$loc == "østersøen_plaiceM"] <- tmp3$fit[newdat$loc == "østersøen_plaiceM"]
newdat$cpue_pred[newdat$loc == "østersøen_herringM"] <- tmp4$fit[newdat$loc == "østersøen_herringM"]
newdat$cpue_pred[newdat$loc == "østersøen_spratM"] <- tmp5$fit[newdat$loc == "østersøen_spratM"]
newdat$cpue_pred[newdat$loc == "østersøen_whitingM"] <- tmp6$fit[newdat$loc == "østersøen_whitingM"]
newdat$cpue_sd <- NA
newdat$cpue_sd[newdat$loc == "østersøen_codM"] <- tmp1$se.fit[newdat$loc == "østersøen_codM"]
newdat$cpue_sd[newdat$loc == "østersøen_flounderM"] <- tmp2$se.fit[newdat$loc == "østersøen_flounderM"]
newdat$cpue_sd[newdat$loc == "østersøen_plaiceM"] <- tmp3$se.fit[newdat$loc == "østersøen_plaiceM"]
newdat$cpue_sd[newdat$loc == "østersøen_herringM"] <- tmp4$se.fit[newdat$loc == "østersøen_herringM"]
newdat$cpue_sd[newdat$loc == "østersøen_spratM"] <- tmp5$se.fit[newdat$loc == "østersøen_spratM"]
newdat$cpue_sd[newdat$loc == "østersøen_whitingM"] <- tmp6$se.fit[newdat$loc == "østersøen_whitingM"]
newdat$cpue_lo <- newdat$cpue_pred - 1.96 * newdat$cpue_sd
newdat$cpue_up <- newdat$cpue_pred + 1.96 * newdat$cpue_sd
## individual models
tmp1.log <- predict(mod.codM, newdata = newdat, type = "link", se.fit = TRUE)
tmp2.log <- predict(mod.flounderM, newdata = newdat, type = "link", se.fit = TRUE)
tmp3.log <- predict(mod.plaiceM, newdata = newdat, type = "link", se.fit = TRUE)
tmp4.log <- predict(mod.herringM, newdata = newdat, type = "link", se.fit = TRUE)
tmp5.log <- predict(mod.spratM, newdata = newdat, type = "link", se.fit = TRUE)
tmp6.log <- predict(mod.whitingM, newdata = newdat, type = "link", se.fit = TRUE)
## for error propagations
newdat$cpue_pred.log <- NA
newdat$cpue_pred.log[newdat$loc == "østersøen_codM"] <- tmp1.log$fit[newdat$loc == "østersøen_codM"]
newdat$cpue_pred.log[newdat$loc == "østersøen_flounderM"] <- tmp2.log$fit[newdat$loc == "østersøen_flounderM"]
newdat$cpue_pred.log[newdat$loc == "østersøen_plaiceM"] <- tmp3.log$fit[newdat$loc == "østersøen_plaiceM"]
newdat$cpue_pred.log[newdat$loc == "østersøen_herringM"] <- tmp4.log$fit[newdat$loc == "østersøen_herringM"]
newdat$cpue_pred.log[newdat$loc == "østersøen_spratM"] <- tmp5.log$fit[newdat$loc == "østersøen_spratM"]
newdat$cpue_pred.log[newdat$loc == "østersøen_whitingM"] <- tmp6.log$fit[newdat$loc == "østersøen_whitingM"]
newdat$cpue_sd.log <- NA
newdat$cpue_sd.log[newdat$loc == "østersøen_codM"] <- tmp1.log$se.fit[newdat$loc == "østersøen_codM"]
newdat$cpue_sd.log[newdat$loc == "østersøen_flounderM"] <- tmp2.log$se.fit[newdat$loc == "østersøen_flounderM"]
newdat$cpue_sd.log[newdat$loc == "østersøen_plaiceM"] <- tmp3.log$se.fit[newdat$loc == "østersøen_plaiceM"]
newdat$cpue_sd.log[newdat$loc == "østersøen_herringM"] <- tmp4.log$se.fit[newdat$loc == "østersøen_herringM"]
newdat$cpue_sd.log[newdat$loc == "østersøen_spratM"] <- tmp5.log$se.fit[newdat$loc == "østersøen_spratM"]
newdat$cpue_sd.log[newdat$loc == "østersøen_whitingM"] <- tmp6.log$se.fit[newdat$loc == "østersøen_whitingM"]
write_rds (newdat, "newdat/newdat_østersøenM.rds")
###########################################
############------østersøen------############
###########################################
library(mgcv)
library(gratia)
library(readr)
library(tidyverse)
library(dplyr)
library(gdata)
library(lubridate)
library(rstudioapi)
# Getting the path of your current open file
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
#--------------------------------------------#
source("funcs.R")
periods <- seq(2000,2024,6)
#------------Make as factors----------------_#
dat_cod <- read_csv("../data_cleaning/dat_cod.csv")
dat_cod <- check.data(dat_cod, periods = periods)
dat_flounder <- read_csv("../data_cleaning/dat_flounder.csv")
dat_flounder <- check.data(dat_flounder, periods = periods)
dat_plaice <- read_csv("../data_cleaning/dat_plaice.csv")
dat_plaice <- check.data(dat_plaice, periods = periods)
dat_herring<- read_csv("../data_cleaning/dat_herring.csv")
dat_herring <- check.data(dat_herring, periods = periods)
dat_sprat<- read_csv("../data_cleaning/dat_sprat.csv")
dat_sprat <- check.data(dat_sprat, periods = periods)
dat_whiting<- read_csv("../data_cleaning/dat_whiting.csv")
dat_whiting <- check.data(dat_whiting, periods = periods)
#--------COD -------#
mod.codA <- gam(cpue ~
period+
s(depth,k=15) +
s(Gear,bs="re")+
Quarter+
SedimentDK,
data = subset(dat_cod, loc == "østersøen_codA"),
family=nb)
mod.codA <- get.mini.model(mod.codA, check.terms = c("period","depth",
"Quarter","SedimentDK"))
#--------FLOUNDER -------#
mod.flounderA <- gam(cpue ~
period +
s(depth,k=15) +
s(Gear,bs="re")+
Quarter+
SedimentDK,
data = subset(dat_flounder, loc == "østersøen_flounderA"),
family=nb)
mod.flounderA <- get.mini.model(mod.flounderA, check.terms = c("period","depth",
"Quarter","SedimentDK"))
#--------PLAICE -------#
mod.plaiceA <- gam(cpue ~
period+
s(depth,k=5) +
s(Gear,bs="re")+
Quarter+
SedimentDK,
data = subset(dat_plaice, loc == "østersøen_plaiceA"), #
family=tw)
mod.plaiceA <- get.mini.model(mod.plaiceA, check.terms = c("period","depth",
"Quarter","SedimentDK"))
#--------HERRING -------#
mod.herringA <- gam(cpue ~
period+
s(depth,k=5) +
s(Gear,bs="re")+
Quarter+
SedimentDK,
data = subset(dat_herring, loc == "østersøen_herringA"),
family=tw)
mod.herringA <- get.mini.model(mod.herringA, check.terms = c("period","depth",
"Quarter","SedimentDK"))
#--------SPRAT -------#
mod.spratA <- gam(cpue ~ #response
period+
s(depth,k=5) +
s(Gear,bs="re")+
Quarter+
SedimentDK,
data = subset(dat_sprat, loc == "østersøen_spratA"),
family=tw)
mod.spratA <- get.mini.model(mod.spratA, check.terms = c("period","depth",
"Quarter","SedimentDK"))
#--------WHITING -------#
mod.whitingA<- gam(cpue ~ #response
period+
s(depth,k=5) +
s(Gear,bs="re")+
Quarter+
SedimentDK,
data = subset(dat_whiting, loc == "østersøen_whitingA"),
family=tw)
mod.whitingA <- get.mini.model(mod.whitingA, check.terms = c("period","depth",
"Quarter","SedimentDK"))
newdat <- expand.grid(period = levels(dat_cod$period),
loc = c("østersøen_codA","østersøen_flounderA",
"østersøen_plaiceA","østersøen_herringA",
"østersøen_spratA","østersøen_whitingA"),
depth = 19, #østersøen is 19
Gear=c("TVS"),
Quarter=c("4"),
SedimentDK=c("5")
)
#to check the depth of each location:
#newdat$depth <- depth.by.loc[match(newdat$loc,names(depth.by.loc))] #overwrite for each location
## individual models
tmp1 <- predict(mod.codA, newdata = newdat, type = "response", se.fit = TRUE)
tmp2 <- predict(mod.flounderA, newdata = newdat, type = "response", se.fit = TRUE)
tmp3 <- predict(mod.plaiceA, newdata = newdat, type = "response", se.fit = TRUE)
tmp4 <- predict(mod.herringA, newdata = newdat, type = "response", se.fit = TRUE)
tmp5 <- predict(mod.spratA, newdata = newdat, type = "response", se.fit = TRUE)
tmp6 <- predict(mod.whitingA, newdata = newdat, type = "response", se.fit = TRUE)
#make new data predictions
newdat$cpue_pred <- NA
newdat$cpue_pred[newdat$loc == "østersøen_codA"] <- tmp1$fit[newdat$loc == "østersøen_codA"]
newdat$cpue_pred[newdat$loc == "østersøen_flounderA"] <- tmp2$fit[newdat$loc == "østersøen_flounderA"]
newdat$cpue_pred[newdat$loc == "østersøen_plaiceA"] <- tmp3$fit[newdat$loc == "østersøen_plaiceA"]
newdat$cpue_pred[newdat$loc == "østersøen_herringA"] <- tmp4$fit[newdat$loc == "østersøen_herringA"]
newdat$cpue_pred[newdat$loc == "østersøen_spratA"] <- tmp5$fit[newdat$loc == "østersøen_spratA"]
newdat$cpue_pred[newdat$loc == "østersøen_whitingA"] <- tmp6$fit[newdat$loc == "østersøen_whitingA"]
newdat$cpue_sd <- NA
newdat$cpue_sd[newdat$loc == "østersøen_codA"] <- tmp1$se.fit[newdat$loc == "østersøen_codA"]
newdat$cpue_sd[newdat$loc == "østersøen_flounderA"] <- tmp2$se.fit[newdat$loc == "østersøen_flounderA"]
newdat$cpue_sd[newdat$loc == "østersøen_plaiceA"] <- tmp3$se.fit[newdat$loc == "østersøen_plaiceA"]
newdat$cpue_sd[newdat$loc == "østersøen_herringA"] <- tmp4$se.fit[newdat$loc == "østersøen_herringA"]
newdat$cpue_sd[newdat$loc == "østersøen_spratA"] <- tmp5$se.fit[newdat$loc == "østersøen_spratA"]
newdat$cpue_sd[newdat$loc == "østersøen_whitingA"] <- tmp6$se.fit[newdat$loc == "østersøen_whitingA"]
newdat$cpue_lo <- newdat$cpue_pred - 1.96 * newdat$cpue_sd
newdat$cpue_up <- newdat$cpue_pred + 1.96 * newdat$cpue_sd
## individual models
tmp1.log <- predict(mod.codA, newdata = newdat, type = "link", se.fit = TRUE)
tmp2.log <- predict(mod.flounderA, newdata = newdat, type = "link", se.fit = TRUE)
tmp3.log <- predict(mod.plaiceA, newdata = newdat, type = "link", se.fit = TRUE)
tmp4.log <- predict(mod.herringA, newdata = newdat, type = "link", se.fit = TRUE)
tmp5.log <- predict(mod.spratA, newdata = newdat, type = "link", se.fit = TRUE)
tmp6.log <- predict(mod.whitingA, newdata = newdat, type = "link", se.fit = TRUE)
## for error propagations
newdat$cpue_pred.log <- NA
newdat$cpue_pred.log[newdat$loc == "østersøen_codA"] <- tmp1.log$fit[newdat$loc == "østersøen_codA"]
newdat$cpue_pred.log[newdat$loc == "østersøen_flounderA"] <- tmp2.log$fit[newdat$loc == "østersøen_flounderA"]
newdat$cpue_pred.log[newdat$loc == "østersøen_plaiceA"] <- tmp3.log$fit[newdat$loc == "østersøen_plaiceA"]
newdat$cpue_pred.log[newdat$loc == "østersøen_herringA"] <- tmp4.log$fit[newdat$loc == "østersøen_herringA"]
newdat$cpue_pred.log[newdat$loc == "østersøen_spratA"] <- tmp5.log$fit[newdat$loc == "østersøen_spratA"]
newdat$cpue_pred.log[newdat$loc == "østersøen_whitingA"] <- tmp6.log$fit[newdat$loc == "østersøen_whitingA"]
newdat$cpue_sd.log <- NA
newdat$cpue_sd.log[newdat$loc == "østersøen_codA"] <- tmp1.log$se.fit[newdat$loc == "østersøen_codA"]
newdat$cpue_sd.log[newdat$loc == "østersøen_flounderA"] <- tmp2.log$se.fit[newdat$loc == "østersøen_flounderA"]
newdat$cpue_sd.log[newdat$loc == "østersøen_plaiceA"] <- tmp3.log$se.fit[newdat$loc == "østersøen_plaiceA"]
newdat$cpue_sd.log[newdat$loc == "østersøen_herringA"] <- tmp4.log$se.fit[newdat$loc == "østersøen_herringA"]
newdat$cpue_sd.log[newdat$loc == "østersøen_spratA"] <- tmp5.log$se.fit[newdat$loc == "østersøen_spratA"]
newdat$cpue_sd.log[newdat$loc == "østersøen_whitingA"] <- tmp6.log$se.fit[newdat$loc == "østersøen_whitingA"]
write_rds (newdat, "newdat/newdat_østersøenA.rds")
###########################################
############------femeren------############
###########################################
library(mgcv)
library(gratia)
library(readr)
library(tidyverse)
library(dplyr)
library(gdata)
library(lubridate)
library(rstudioapi)
# Getting the path of your current open file
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
#--------------------------------------------#
source("funcs.R")
periods <- seq(2000,2024,6)
#------------Make as factors----------------_#
dat_cod <- read_csv("dat_cod.csv")
dat_cod$loc<-as.factor(dat_cod$loc)
dat_cod$Gear<-as.factor(dat_cod$Gear)
dat_cod$Quarter<-as.factor(dat_cod$Quarter)
dat_cod$SedimentDK<-as.factor(dat_cod$SedimentDK)
# Getting the path of your current open file
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
#--------------------------------------------#
source("funcs.R")
periods <- seq(2000,2024,6)
#------------Make as factors----------------_#
dat_cod <- read_csv("../data_cleaning/dat_cod.csv")
dat_cod <- check.data(dat_cod, periods = periods)
dat_flounder <- read_csv("../data_cleaning/dat_flounder.csv")
dat_flounder <- check.data(dat_flounder, periods = periods)
dat_plaice <- read_csv("../data_cleaning/dat_plaice.csv")
dat_plaice <- check.data(dat_plaice, periods = periods)
dat_herring<- read_csv("../data_cleaning/dat_herring.csv")
dat_herring <- check.data(dat_herring, periods = periods)
dat_sprat<- read_csv("../data_cleaning/dat_sprat.csv")
dat_sprat <- check.data(dat_sprat, periods = periods)
dat_whiting<- read_csv("../data_cleaning/dat_whiting.csv")
dat_whiting <- check.data(dat_whiting, periods = periods)
#--------COD -------#
mod.codJ <- gam(cpue ~ #response
period+
s(depth,k=5) +
s(Gear,bs="re")+
Quarter+
SedimentDK,
data = subset(dat_cod, loc == "femeren_codJ"),
family=tw)
## NEW: get minimum best model
mod.codJ <- get.mini.model(mod.codJ, check.terms = c("period","depth",
"Quarter","SedimentDK"))
mod.flounderJ <- gam(cpue ~ #response
period+
s(depth,k=5) +
s(Gear,bs="re")+
Quarter+
SedimentDK,
data = subset(dat_flounder, loc == "femeren_flounderJ"),
family=tw)
mod.flounderJ<- get.mini.model(mod.flounderJ, check.terms = c("period","depth",
"Quarter","SedimentDK"))
#--------PLAICE -------#
mod.plaiceJ <- gam(cpue ~ #response
period+
s(depth,k=5) +
s(Gear,bs="re")+
Quarter+
SedimentDK,
data = subset(dat_plaice, loc == "femeren_plaiceJ"),
family=tw)
mod.plaiceJ <- get.mini.model(mod.plaiceJ, check.terms = c("period","depth",
"Quarter","SedimentDK"))
#--------HERRING -------#
mod.herringJ <- gam(cpue ~ #response
period+
s(depth,k=5) +
s(Gear,bs="re")+
Quarter+
SedimentDK,
data = subset(dat_herring, loc == "femeren_herringJ"),
family=tw)
mod.herringJ <- get.mini.model(mod.herringJ, check.terms = c("period","depth",
"Quarter","SedimentDK"))
#--------SPRAT -------#
mod.spratJ <- gam(cpue ~ #response
period+
s(depth,k=5) +
s(Gear,bs="re")+
Quarter+
SedimentDK,
data = subset(dat_sprat, loc == "femeren_spratJ"),
family=tw)
mod.spratJ <- get.mini.model(mod.spratJ, check.terms = c("period","depth",
"Quarter","SedimentDK"))
#--------WHITING -------#
mod.whitingJ <- gam(cpue ~ #response
period+
s(depth,k=5) +
s(Gear,bs="re")+
Quarter+
SedimentDK,
data = subset(dat_whiting, loc == "femeren_whitingJ"),
family=tw)
mod.whitingJ <- get.mini.model(mod.whitingJ, check.terms = c("period","depth",
"Quarter","SedimentDK"))
newdat <- expand.grid(period = levels(dat_cod$period),
loc = c("femeren_codJ","femeren_flounderJ",
"femeren_plaiceJ","femeren_herringJ",
"femeren_spratJ","femeren_whitingJ"),
depth = 19, #femeren is 19
Gear=c("TVS"),
Quarter=c("4"),
SedimentDK=c("5")
)
#to check the depth of each location:
#newdat$depth <- depth.by.loc[match(newdat$loc,names(depth.by.loc))] #overwrite for each location
## individual models
tmp1 <- predict(mod.codJ, newdata = newdat, type = "response", se.fit = TRUE)
tmp2 <- predict(mod.flounderJ, newdata = newdat, type = "response", se.fit = TRUE)
tmp3 <- predict(mod.plaiceJ, newdata = newdat, type = "response", se.fit = TRUE)
tmp4 <- predict(mod.herringJ, newdata = newdat, type = "response", se.fit = TRUE)
tmp5 <- predict(mod.spratJ, newdata = newdat, type = "response", se.fit = TRUE)
tmp6 <- predict(mod.whitingJ, newdata = newdat, type = "response", se.fit = TRUE)
#make new data predictions
newdat$cpue_pred <- NA
#to check the depth of each location:
#newdat$depth <- depth.by.loc[match(newdat$loc,names(depth.by.loc))] #overwrite for each location
## individual models
tmp1 <- predict(mod.codJ, newdata = newdat, type = "response", se.fit = TRUE)
tmp2 <- predict(mod.flounderJ, newdata = newdat, type = "response", se.fit = TRUE)
tmp3 <- predict(mod.plaiceJ, newdata = newdat, type = "response", se.fit = TRUE)
tmp4 <- predict(mod.herringJ, newdata = newdat, type = "response", se.fit = TRUE)
tmp5 <- predict(mod.spratJ, newdata = newdat, type = "response", se.fit = TRUE)
tmp6 <- predict(mod.whitingJ, newdata = newdat, type = "response", se.fit = TRUE)
#make new data predictions
newdat$cpue_pred <- NA
newdat$cpue_pred[newdat$loc == "femeren_codJ"] <- tmp1$fit[newdat$loc == "femeren_codJ"]
newdat$cpue_pred[newdat$loc == "femeren_flounderJ"] <- tmp2$fit[newdat$loc == "femeren_flounderJ"]
newdat$cpue_pred[newdat$loc == "femeren_plaiceJ"] <- tmp3$fit[newdat$loc == "femeren_plaiceJ"]
newdat$cpue_pred[newdat$loc == "femeren_herringJ"] <- tmp4$fit[newdat$loc == "femeren_herringJ"]
newdat$cpue_pred[newdat$loc == "femeren_spratJ"] <- tmp5$fit[newdat$loc == "femeren_spratJ"]
newdat$cpue_pred[newdat$loc == "femeren_whitingJ"] <- tmp6$fit[newdat$loc == "femeren_whitingJ"]
newdat$cpue_sd <- NA
newdat$cpue_sd[newdat$loc == "femeren_codJ"] <- tmp1$se.fit[newdat$loc == "femeren_codJ"]
newdat$cpue_sd[newdat$loc == "femeren_flounderJ"] <- tmp2$se.fit[newdat$loc == "femeren_flounderJ"]
newdat$cpue_sd[newdat$loc == "femeren_plaiceJ"] <- tmp3$se.fit[newdat$loc == "femeren_plaiceJ"]
newdat$cpue_sd[newdat$loc == "femeren_herringJ"] <- tmp4$se.fit[newdat$loc == "femeren_herringJ"]
newdat$cpue_sd[newdat$loc == "femeren_spratJ"] <- tmp5$se.fit[newdat$loc == "femeren_spratJ"]
newdat$cpue_sd[newdat$loc == "femeren_whitingJ"] <- tmp6$se.fit[newdat$loc == "femeren_whitingJ"]
newdat$cpue_lo <- newdat$cpue_pred - 1.96 * newdat$cpue_sd
newdat$cpue_up <- newdat$cpue_pred + 1.96 * newdat$cpue_sd
## individual models
tmp1.log <- predict(mod.codJ, newdata = newdat, type = "link", se.fit = TRUE)
tmp2.log <- predict(mod.flounderJ, newdata = newdat, type = "link", se.fit = TRUE)
tmp3.log <- predict(mod.plaiceJ, newdata = newdat, type = "link", se.fit = TRUE)
tmp4.log <- predict(mod.herringJ, newdata = newdat, type = "link", se.fit = TRUE)
tmp5.log <- predict(mod.spratJ, newdata = newdat, type = "link", se.fit = TRUE)
tmp6.log <- predict(mod.whitingJ, newdata = newdat, type = "link", se.fit = TRUE)
## for error propagations
newdat$cpue_pred.log <- NA
newdat$cpue_pred.log[newdat$loc == "femeren_codJ"] <- tmp1.log$fit[newdat$loc == "femeren_codJ"]
newdat$cpue_pred.log[newdat$loc == "femeren_flounderJ"] <- tmp2.log$fit[newdat$loc == "femeren_flounderJ"]
newdat$cpue_pred.log[newdat$loc == "femeren_plaiceJ"] <- tmp3.log$fit[newdat$loc == "femeren_plaiceJ"]
newdat$cpue_pred.log[newdat$loc == "femeren_herringJ"] <- tmp4.log$fit[newdat$loc == "femeren_herringJ"]
newdat$cpue_pred.log[newdat$loc == "femeren_spratJ"] <- tmp5.log$fit[newdat$loc == "femeren_spratJ"]
newdat$cpue_pred.log[newdat$loc == "femeren_whitingJ"] <- tmp6.log$fit[newdat$loc == "femeren_whitingJ"]
newdat$cpue_sd.log <- NA
newdat$cpue_sd.log[newdat$loc == "femeren_codJ"] <- tmp1.log$se.fit[newdat$loc == "femeren_codJ"]
newdat$cpue_sd.log[newdat$loc == "femeren_flounderJ"] <- tmp2.log$se.fit[newdat$loc == "femeren_flounderJ"]
newdat$cpue_sd.log[newdat$loc == "femeren_plaiceJ"] <- tmp3.log$se.fit[newdat$loc == "femeren_plaiceJ"]
newdat$cpue_sd.log[newdat$loc == "femeren_herringJ"] <- tmp4.log$se.fit[newdat$loc == "femeren_herringJ"]
newdat$cpue_sd.log[newdat$loc == "femeren_spratJ"] <- tmp5.log$se.fit[newdat$loc == "femeren_spratJ"]
newdat$cpue_sd.log[newdat$loc == "femeren_whitingJ"] <- tmp6.log$se.fit[newdat$loc == "femeren_whitingJ"]
if(line){
write_rds(newdat,"~/Documents/DTU/Speciale/R/shiny/Shiny_fiskepleje/newdat/newdat_femerenJ.rds")
}else{
write_rds (newdat, "../newdat_femerenJ.rds")
}
write_rds (newdat, "newdat/newdat_femerenJ.rds")
